schema {
   query: Query
}

type Empregado {
  id: ID!
  nome: String!
  idade: Int!
  nascimento: String
  projetos: [Projeto]!
}

type Projeto {
  id: ID!
  nome: String!
  codigoServico: Int!
  responsavel: String!
  prazo: String!
}

type Query {
  findAllEmpregados: [Empregado]!
#  contarEmpregados: Long!
  findEmpregadoPorId(id: Int) : Empregado!
}

type Mutation {
  novoEmpregado(nome: String!, idade: Int!) : Empregado
}

type Employee {
  id: ID!
  name: String!
  age: Int!
  position: String!
  salary: Int!
}

schema {
  query: EmployeeQueries
  mutation: EmployeeMutations
}
type EmployeeQueries {
  employees: [Employee]
  employee(id: ID!): Employee!
}
type EmployeeMutations {
  newEmployee(employee: EmployeeInput!): Employee
  deleteEmployee(id: ID!) : Boolean
  updateEmployee(id: ID!): Employee
}
input EmployeeInput {
  name: String
  age: Int
  position: String
  salary: Int
}
